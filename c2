Sub PBOMCheck()
    Dim selectedFile As String
    Dim savePath As String
    Dim wbPBOM As Workbook
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long

    Dim displayName As String, eid As String
    Dim statusK As String, phaseG As String, phaseP As String
    Dim finalApproval As String, level As Variant
    Dim errores As Integer: errores = 0

    ' Message to guide the user before selecting the PBOM file
    MsgBox "Please select the PBOM file to check.", vbInformation, "Select PBOM File"

    ' Ask user to select the PBOM file
    With Application.FileDialog(msoFileDialogFilePicker)
        .Title = "Select PBOM File"
        .Filters.Add "Excel Files", "*.xls; *.xlsx; *.xlsm", 1
        If .Show <> -1 Then Exit Sub
        selectedFile = .SelectedItems(1)
        UserForm2.Hide
    End With

    ' Open PBOM file
    Set wbPBOM = Workbooks.Open(selectedFile)
    Set ws = wbPBOM.Sheets(1)

    Application.ScreenUpdating = False

    ' Apply formatting before processing
    With ws
        .Rows(4).Interior.Color = RGB(200, 200, 200)
        .Rows(5).Interior.Color = RGB(0, 112, 192)
        .Rows(5).Font.Color = RGB(255, 255, 255)
        .Range("B4,K4,M4,P4,Q4,R4,W4,X4,Y4,Z4,AR4").Interior.Color = RGB(255, 255, 0)
        .Range("AT3:AX3").Merge
        .Range("AT3").Value = "PBOM Check"
        .Range("AT3").HorizontalAlignment = xlCenter
        .Range("AT3").Font.Bold = True
        .Range("AT4").Value = "CM ACTION - Notes"
        .Range("AU4").Value = "Display Name = EID"
        .Range("AV4").Value = "Header/MLI"
        .Range("AW4").Value = "DR/SCH/REMOVE"
        .Range("AX4").Value = "Piping"
        .Rows(4).AutoFilter

        Dim colList As Variant
        colList = Array("B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "U", _
                        "Y", "Z", "AA", "AB", "AC", "AD", "AE", "AF", "AG", "AH", "AI", "AJ", "AK", "AL", "AM", "AN", _
                        "AO", "AP", "AQ", "AR", "AT", "AU", "AV", "AW", "AX")
        Dim col As Variant
        For Each col In colList
            .Columns(col).AutoFit
        Next col

        .Columns("T").ColumnWidth = 50
        .Columns("V").ColumnWidth = 50
        .Columns("W").ColumnWidth = 50
        .Columns("X").ColumnWidth = 50
        .Columns("AT").ColumnWidth = 70
        .Columns("AC").ColumnWidth = 70

        .Columns("AS").ColumnWidth = 2
        .Columns("AS").Interior.Color = RGB(0, 0, 0)
        .Columns("AY").ColumnWidth = 2
        .Columns("AY").Interior.Color = RGB(0, 0, 0)

        .Rows.AutoFit

        .Activate
        .Range("C6").Select
        ActiveWindow.FreezePanes = True
    End With

    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row

    For i = 6 To lastRow
        level = ws.Cells(i, "A").Value
        finalApproval = Trim(ws.Cells(i, "Y").Value)
        If level <> 1 And finalApproval <> "Accepted" Then
            ws.Cells(i, "Y").Interior.Color = RGB(255, 199, 206)
            ws.Cells(i, "AR").Value = "CM Approval â‰  Accepted"
            errores = errores + 1
        Else
            ws.Cells(i, "Y").Interior.ColorIndex = xlNone
            ws.Cells(i, "AR").ClearContents
        End If

        displayName = Trim(ws.Cells(i, "B").Value)
        eid = Trim(ws.Cells(i, "AQ").Value)
        If displayName = eid Then
            ws.Cells(i, "AU").Value = eid
            ws.Cells(i, "AU").Interior.ColorIndex = xlNone
        Else
            ws.Cells(i, "AU").Value = eid
            ws.Cells(i, "AU").Interior.Color = RGB(255, 199, 206)
        End If

        statusK = Trim(ws.Cells(i, "K").Value)
        Select Case statusK
            Case "CM Remove Level"
                ws.Cells(i, "AV").Value = "Header"
                ws.Rows(i).Interior.Color = RGB(221, 235, 247)
            Case "Accepted", "Replace", "Out of Scope"
                ws.Cells(i, "AV").Value = "MLI"
                ws.Cells(i, "AV").Interior.ColorIndex = xlNone
            Case Else
                ws.Cells(i, "AV").Value = statusK
                ws.Cells(i, "AV").Interior.Color = RGB(255, 199, 206)
        End Select

        phaseG = Trim(ws.Cells(i, "G").Value)
        phaseP = Trim(ws.Cells(i, "P").Value)
        Select Case True
            Case statusK = "Accepted" And phaseG = "Production"
                ws.Cells(i, "AW").Value = "DR"
                ws.Cells(i, "AW").Interior.ColorIndex = xlNone
            Case statusK = "Replace" And phaseP = "Production"
                ws.Cells(i, "AW").Value = "DR"
                ws.Cells(i, "AW").Interior.ColorIndex = xlNone
            Case statusK = "Replace" And phaseP = "Development"
                ws.Cells(i, "AW").Value = "SCH"
                ws.Cells(i, "AW").Interior.ColorIndex = xlNone
            Case statusK = "Out of Scope"
                ws.Cells(i, "AW").Value = "Out of Scope"
                ws.Cells(i, "AW").Interior.ColorIndex = xlNone
            Case statusK = "CM Remove Level"
                ws.Cells(i, "AW").Value = "Header"
                ws.Cells(i, "AW").Interior.Color = RGB(221, 235, 247)
            Case Else
                ws.Cells(i, "AW").Value = phaseP
                ws.Cells(i, "AW").Interior.Color = RGB(255, 199, 206)
        End Select
    Next i

    ' Message box before saving
    MsgBox "Now save the New Unit Release file with the correct project name.", vbInformation, "Save File"

    ' Convert all formulas to plain text values
    ws.UsedRange.Value = ws.UsedRange.Value

    ' Ask user to save the result file
    With Application.FileDialog(msoFileDialogSaveAs)
        .Title = "Save PBOM Check Output"
        .InitialFileName = "New_Unit_Release.xlsx"
        .FilterIndex = 1
        If .Show = -1 Then
            savePath = .SelectedItems(1)
            Application.DisplayAlerts = False
            wbPBOM.SaveAs Filename:=savePath
            Application.DisplayAlerts = True
        Else
            MsgBox "Save canceled. No file was saved.", vbExclamation
        End If
    End With

    Application.ScreenUpdating = True

    If errores > 0 Then
        MsgBox errores & " rows have Final CM Approval different from 'Accepted'", vbExclamation, "PBOM Check"
    Else
        MsgBox "PBOM Check completed with no approval errors", vbInformation, "PBOM Check"
    End If
End Sub
